; segment selector (16 bits, 2 bytes)

; |15|14|13|12|11|10|09|08|07|06|05|04|03|02|01|00|
; +--------------------------------------+--+-----+
; |               INDEX                  |TI| RPL |
; +--------------------------------------+--+-----+

;segmnt selector attribute

TI_GDT	EQU 0
TI_LDT	EQU 4

RPL0	EQU 0
RPL1	EQU 1
RPL2	EQU 2
RPL3	EQU 3

; usage: Selector index, ti, rpl
; 			index: dw (higher 13 bits available)
;			ti:    db (bit 0 available)
;			rpl:   db (lower 2 bits available)

%macro Selector 3
	dw (%1 & 0FFF8h) | ((%2 & 01h) << 1) | (%3 & 03h)
%endmacro

; segment descripor (64 bits, 8 bytes)

; | 31| 30| 29| 28| 27| 26| 25| 24| 23| 22| 21| 20| 19| 18| 17| 16| 15| 14| 13| 12| 11| 10| 09| 08| 07| 06| 05| 04| 03| 02| 01| 00|
; +-------------------------------+---+---+---+---+---------------+---+-------+---+---------------+-------------------------------+
; |           Base 31:24          | G |D/B| 0 |AVL|  Limit 19:16  | P |  DPL  | S |      TYPE     |          Base 23:16           |
; +-------------------------------+---+---+---+---+---------------+---+-------+---+---------------+-------------------------------+
; |                Base Address 15:0                              |                   Segment Limit 15:0                          |
; +---------------------------------------------------------------+---------------------------------------------------------------+

; segment descriptor attribute

DA_G_BYTE		EQU 0000h ;0
DA_G_4K			EQU 8000h ;1

DA_16			EQU 0000h ;0
DA_32			EQU 4000h ;1
DA_UPPER_64K	EQU 0000h ;0
DA_UPPER_4G		EQU 4000h ;1

DA_NP			EQU 0000h ;0
DA_P			EQU 0080h ;1

DA_DPL0		EQU 0000h ;0
DA_DPL1		EQU 0020h ;1
DA_DPL2		EQU 0040h ;2
DA_DPL3		EQU 0060h ;3

DA_SYSTEM		EQU 0000h ;0
DA_COD			EQU 0010h ;1

; E(expand) W(write) A(accesed) Default(read)
DA_D			EQU 10h
DA_DA			EQU 11h
DA_DW			EQU 12h
DA_DWA			EQU 13h
DA_DE			EQU 14h
DA_DEA			EQU 15h
DA_DWE			EQU 16h
DA_DWEA			EQU 17h

; C(conforming) R(read) A(accessed) Default(execute)
DA_C			EQU 18h
DA_CA			EQU 19h
DA_CR			EQU 1ah
DA_CRA			EQU 1bh
DA_CC			EQU 1ch
DA_CCA			EQU 1dh
DA_CRC			EQU 1eh
DA_CRCA			EQU 1fh

; system segmetn descriptor type
DA_S_RESERVED0			EQU 0
DA_S_16_TSS_AVL			EQU 1
DA_S_LDT				EQU 2
DA_S_16_TSS_BUSY		EQU 3
DA_S_16_CallGate		EQU 4
DA_S_TaskGate			EQU 5
DA_S_16_InterruptGate	EQU 6
DA_S_16_TrapGate		EQU 7
DA_S_RESERVED1			EQU 8
DA_S_32_TSS_AVL			EQU 9
DA_S_RESERVED2			EQU 10
DA_S_32_TSS_BUSY		EQU 11
DA_S_32_CallGate		EQU 12
DA_S_RESERVED3			EQU 13
DA_S_32_InterruptGate	EQU 14
DA_S_32_TrapGate		EQU 15

; usage: Descriptor base, limit, attribute
; 			base:      dd
;			limit:     dd (low 20 bits available)
;			attribute: dw (lower 4 bits of higher byte are always 0)

%macro Descriptor 3
	dw %2 & 0FFFFh
	dw %1 & 0FFFFh
	db (%1 >> 16) & 0FFh
	dw (%3 & 0C0FFh) | ((%2 >> 8) & 0F00h)
	db %1 >> 24
%endmacro

; page-directory entry & page-table entry (32 bits, 4 bytes)

; | 31| 30| 29| 28| 27| 26| 25| 24| 23| 22| 21| 20| 19| 18| 17| 16| 15| 14| 13| 12| 11| 10| 09| 08| 07| 06| 05| 04| 03| 02| 01| 00|
; +-------------------------------------------------------------------------------+-----------+---+---+---+---+---+---+---+---+---+
; |                      page/page-table base address                             |    Avail  | G | PS| D | A |PDC|PWT|U/S|R/W| P |
; +-------------------------------------------------------------------------------+-----------+---+---+---+---+---+---+---+---+---+

; page attributes
PG_P		equ 1   ; set
PG_NP		equ 0   ; not set
PG_R		equ 0   ; not set
PG_RW		equ 2   ; set
PG_U		equ 4   ; set
PG_S		equ 0   ; not set
PG_PWT		equ 8   ; set
PG_PDC		equ 16  ; set
PG_A		equ 32  ; set
PG_D		equ 64  ; set
PG_4K		equ 0   ; not set
PG_G		equ 128 ; set

; usage: PageEntry base, attribute
;			base:      dd (lower 20 bites available)
;			attribute: db 

%macro PageEntry 2
	db %2
	db (%1 << 4) & 0F0h
	dw (%1 >> 4) & 0FFFFh
%endmacro

; call gate descriptor (64 bites, 8 bytes)

; | 31| 30| 29| 28| 27| 26| 25| 24| 23| 22| 21| 20| 19| 18| 17| 16| 15| 14| 13| 12| 11| 10| 09| 08| 07| 06| 05| 04| 03| 02| 01| 00|
; +---------------------------------------------------------------+---+-------+---+---------------+-----------+-------------------+
; |                       offset in segment 31:16                 | P |  DPL  | 0 |      Type     |  0  0  0  |   Param. Count    |
; +---------------------------------------------------------------+---+-------+---+---------------+-----------+-------------------+
; |                    Segment Selector                           |                   offset in segment 15:0                      |
; +---------------------------------------------------------------+---------------------------------------------------------------+

; usage: CallGate selector, offset, attribute, param_count
;			selector:    dw
;			offset:      dd
;			attribute:   db
;			param_count: db

%macro CallGate 4
	dw %2 & 0FFFFh
	dw %1
	db %4 & 1Fh
	db %3 & 0EFh
	dw ((%2 >> 16) & 0ffffh)
%endmacro

; task gate descriptor (64 bites, 8 bytes)

; | 31| 30| 29| 28| 27| 26| 25| 24| 23| 22| 21| 20| 19| 18| 17| 16| 15| 14| 13| 12| 11| 10| 09| 08| 07| 06| 05| 04| 03| 02| 01| 00|
; +---------------------------------------------------------------+---+-------+---+---------------+-------------------------------+
; |                              reserved                         | P |  DPL  | 0 |      Type     |            reserved           |
; +---------------------------------------------------------------+---+-------+---+---------------+-------------------------------+
; |                 TSS  Segment Selector                         |                             reserved                          |
; +---------------------------------------------------------------+---------------------------------------------------------------+

; usage: TaskGate selector, attribute
;			selector:  dw
;			attribute: db

%macro TaskGate 2
	dw 0
	dw %1
	db 0
	db %2 & 0EFh
	dw 0
%endmacro

; interrupt gate descriptor (64 bites, 8 bytes)

; | 31| 30| 29| 28| 27| 26| 25| 24| 23| 22| 21| 20| 19| 18| 17| 16| 15| 14| 13| 12| 11| 10| 09| 08| 07| 06| 05| 04| 03| 02| 01| 00|
; +---------------------------------------------------------------+---+-------+---+---------------+-----------+-------------------+
; |                          offset 31:16                         | P |  DPL  | 0 |      Type     |  0  0  0  |      reserved     |
; +---------------------------------------------------------------+---+-------+---+---------------+-----------+-------------------+
; |                      Segment Selector                         |                            offset 15:0                        |
; +---------------------------------------------------------------+---------------------------------------------------------------+

; usage: InterruptGate selector, offset, attribute
;			selector:  dw
;			offset:    dd
;			attribute: db

%macro InterruptGate 3
	dw %2 & 0FFFFh
	dw %1
	db 0
	db %3 & 0EFh
	dw %2 >> 16
%endmacro

; trap gate descriptor (64 bites, 8 bytes)

; | 31| 30| 29| 28| 27| 26| 25| 24| 23| 22| 21| 20| 19| 18| 17| 16| 15| 14| 13| 12| 11| 10| 09| 08| 07| 06| 05| 04| 03| 02| 01| 00|
; +---------------------------------------------------------------+---+-------+---+---------------+-----------+-------------------+
; |                          offset 31:16                         | P |  DPL  | 0 |      Type     |  0  0  0  |      reserved     |
; +---------------------------------------------------------------+---+-------+---+---------------+-----------+-------------------+
; |                      Segment Selector                         |                            offset 15:0                        |
; +---------------------------------------------------------------+---------------------------------------------------------------+

; usage: TrapGate selector, offset, attribute
;			selector:  dw
;			offset:    dd
;			attribute: db

%macro TrapGate 3
	dw %2 & 0FFFFh
	dw %1
	db 0
	db %2 & 0EFh
	dw %2 >> 16
%endmacro

; tss segment descripor (64 bits, 8 bytes)

; | 31| 30| 29| 28| 27| 26| 25| 24| 23| 22| 21| 20| 19| 18| 17| 16| 15| 14| 13| 12| 11| 10| 09| 08| 07| 06| 05| 04| 03| 02| 01| 00|
; +-------------------------------+---+---+---+---+---------------+---+-------+---+---------------+-------------------------------+
; |           Base 31:24          | G | 0 | 0 |AVL|  Limit 19:16  | P |  DPL  | 0 |      TYPE     |          Base 23:16           |
; +-------------------------------+---+---+---+---+---------------+---+-------+---+---------------+-------------------------------+
; |                Base Address 15:0                              |                   Segment Limit 15:0                          |
; +---------------------------------------------------------------+---------------------------------------------------------------+

; usage: TssDescriptor base, limit, attribute
; 			base:      dd
;			limit:     dd (low 20 bits available)
;			attribute: dw (lower 4 bits of higher byte are always 0)

%macro TssDescriptor 3
	dw %2 & 0FFFFh
	dw %1 & 0FFFFh
	db (%1 >> 16) & 0FFh
	dw (%3 & 090EFh) | ((%2 >> 8) & 0F00h)
	db %1 >> 24
%endmacro

; tss segment structure (104 bytes)

; |31|30|29|28|27|26|25|24|23|22|21|20|19|18|17|16|15|14|13|12|11|10|09|08|07|06|05|04|03|02|01|00|
; +-----------------------------------------------+--------------------------------------------+--+
; |              I/O Map Base Address             |               Reserved                     |T |
; +-----------------------------------------------+--------------------------------------------+--+
; |                   Reserved                    |               LDT Segment Selector            |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |               GS                              |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |               FS                              |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |               DS                              |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |               SS                              |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |               CS                              |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |               ES                              |
; +-----------------------------------------------+-----------------------------------------------+
; |                                              EDI                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                              ESI                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                              EBP                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                              ESP                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                              EBX                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                              EDX                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                              ECX                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                              EAX                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                             EFLAGS                                            |
; +-----------------------------------------------------------------------------------------------+
; |                                              EIP                                              |
; +-----------------------------------------------------------------------------------------------+
; |                                            CR3(PDBR)                                          |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |                    SS2                        |
; +-----------------------------------------------+-----------------------------------------------+
; |                                              ESP2                                             |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |                    SS1                        |
; +-----------------------------------------------+-----------------------------------------------+
; |                                              ESP1                                             |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |                    SS0                        |
; +-----------------------------------------------+-----------------------------------------------+
; |                                              ESP0                                             |
; +-----------------------------------------------+-----------------------------------------------+
; |                   Reserved                    |            Previous Task Link                 |
; +-----------------------------------------------+-----------------------------------------------+

;struc tTssSegment
;	.previous_task_link   resw 1
;	.reserved:            resw 1
;	.esp0:                resd 1
;	.ss0:                 resw 1
;	.reserved0:           resw 1
;	.esp1:                resd 1
;	.ss1:                 resw 1
;	.reserved1:           resw 1
;	.esp2:                resd 1
;	.ss2:                 resw 1
;	.reserved2:           resw 1
;	.cr3:                 resd 1
;	.eip:                 resd 1
;	.eflags:              resd 1
;	.eax:                 resd 1
;	.ecx:                 resd 1
;	.edx:                 resd 1
;	.ebx:                 resd 1
;	.esp:                 resd 1
;	.ebp:                 resd 1
;	.esi:                 resd 1
;	.edi:                 resd 1
;	.es:                  resw 1
;	.reserved3:           resw 1
;	.cs:                  resw 1
;	.reserved4:           resw 1
;	.ss:                  resw 1
;	.reserved5:           resw 1
;	.ds:                  resw 1
;	.reserved6:           resw 1
;	.fs:                  resw 1
;	.reserved7:           resw 1
;	.gs:                  resw 1
;	.reserved8:           resw 1
;	.ldt_selector:        resw 1
;	.reserved9:           resw 1
;	.debug_trap:          resw 1
;	.io_map_base_address: resw 1
;endstruc

